<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.backend.doctor.mapper.DoctorsReservingsMapper">

	<!-- @GetMapping("/today-plan-view") -->
 	<!-- `내림차순`으로 정렬한 DoctorsReservings List 데이터를 `다음버튼` 클릭으로 내림차순으로 나열, 
 	`이전버튼` 클릭으로  이전 목록이 있는 DoctorsReservings List 데이터를 역순으로 정렬해 나열하는 기능, 
 	아무 버튼을 누르지 않았을 때의 기능을 구현하기 위한 쿼리문 포함 -->
	<select id="selectReservingsByDoctorId" parameterType="map" resultType="com.backend.doctor.domain.DoctorsReservings">
		SELECT
			`id`,
			`doctorNumber`,
			`customerId`,
			`customerName`,
			`title`,
			`description`,
			`visitDate`,
			`imagePath`,
			`memo`,
			`status`,
			`treatment`,
			`createdAt`,
			`updatedAt`
		FROM
			`reservings`
		WHERE
			`doctorNumber` = #{doctorId}
		<!-- 다음 버튼 : 기준 날짜 이후 데이터 (오름차순 정렬) -->
        <if test="direction == 'next'">
            <![CDATA[
            AND `visitDate` > #{standardVisitDate}
            ]]>
            ORDER BY `visitDate` ASC
        </if>
		
		<!-- 이전 버튼: 기준 날짜 이후 데이터 (내림차순 정렬) -->
        <if test="direction == 'prev'">
            <![CDATA[
            AND `visitDate` < #{standardVisitDate}
            ]]>
            ORDER BY `visitDate` DESC
        </if>
 		
 		<!-- 기본 동작 : 모든 데이터를 오름차순 정렬 -->
        <if test="direction == null">
            ORDER BY `visitDate` ASC
        </if>
        
 		LIMIT ${limit}
 		
	</select>
	<!-- 페이징 버튼 말소 기능을 위한 visitDate(날짜) select
	로그인한 의사 번호와 동일한 데이터만 추출
	방문 날짜를 기준으로 정렬 후 1개 추출(마지막/첫 번째 판단) -->
	<select id="selectReservingsdBydoctorNumberAsSort" resultType="String" parameterType="map">
		SELECT
			`visitDate`
		FROM
			`reservings`
		WHERE
			`doctorNumber` = #{doctorId}
		ORDER BY
			`visitDate` ${sort}
		LIMIT 1
	</select>
	
	
	<!-- @GetMapping("/patient-status-view") - 의사 진료 현황 화면 -->
	<select id="selectByIdAndDoctorNumber" resultType="com.backend.doctor.domain.DoctorsReservings" parameterType="map">
		SELECT
			`id`,
			`doctorNumber`, 
			`customerId`,
			`customerName`,
			`title`,
			`description`,
			`visitDate`,
			`imagePath`,
			`memo`,
			`status`,
			`treatment`
		FROM
			`reservings`
		WHERE
			`id` = #{id} AND
			`doctorNumber` = #{doctorNumber}
	</select>
	
	
	<!-- @PostMapping("/statusUpdate") -->
	<update id="updateReservingsByIdDoctorNumberDoctorId" parameterType="map">
		UPDATE 
			`reservings`
		SET 
			`memo` = #{memo},
			`status` = #{status},
			`treatment` = #{treatment},
			`updatedAt` = NOW()
		WHERE 
			`id` = #{id} AND
			`customerId` = #{customerId} AND
			`doctorNumber` = #{doctorId}
	</update>
	
	
	<!-- @PostMapping("/calendar-patient-update") -->
	<update id="updateReservingsByIdAndStatus" parameterType="map">
		UPDATE 
			`reservings`
		SET 
			`status` = #{status},
			`updatedAt` = NOW()
		WHERE 
			`id` = #{id}
	</update>

</mapper>